{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.38.33.27573",
      "templateHash": "4460504926073425963"
    }
  },
  "parameters": {
    "environmentName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 64,
      "metadata": {
        "description": "Name of the environment that can be used as part of naming resource convention, the name of the resource group for your application will use this name, prefixed with rg-"
      }
    },
    "location": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The location used for all deployed resources"
      }
    },
    "principalId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Id of the user or app to assign application roles"
      }
    },
    "cache_password": {
      "type": "securestring",
      "metadata": {
        "azd": {
          "type": "generate",
          "config": {
            "length": 22,
            "noSpecial": true
          }
        }
      }
    },
    "postgres_password": {
      "type": "securestring",
      "metadata": {
        "azd": {
          "type": "generate",
          "config": {
            "length": 22
          }
        }
      }
    }
  },
  "variables": {
    "tags": {
      "azd-env-name": "[parameters('environmentName')]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2022-09-01",
      "name": "[format('rg-{0}', parameters('environmentName'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2025-04-01",
      "name": "resources",
      "resourceGroup": "[format('rg-{0}', parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "principalId": {
            "value": "[parameters('principalId')]"
          },
          "postgres_password": {
            "value": "[parameters('postgres_password')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.38.33.27573",
              "templateHash": "7606029619628548783"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The location used for all deployed resources"
              }
            },
            "principalId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Id of the user or app to assign application roles"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags that will be applied to all resources"
              }
            },
            "postgres_password": {
              "type": "securestring",
              "metadata": {
                "description": "PostgreSQL administrator password"
              }
            }
          },
          "variables": {
            "resourceToken": "[uniqueString(resourceGroup().id)]"
          },
          "resources": [
            {
              "type": "Microsoft.App/managedEnvironments/dotNetComponents",
              "apiVersion": "2024-02-02-preview",
              "name": "[format('{0}/{1}', format('cae-{0}', variables('resourceToken')), 'aspire-dashboard')]",
              "properties": {
                "componentType": "AspireDashboard"
              },
              "dependsOn": [
                "[resourceId('Microsoft.App/managedEnvironments', format('cae-{0}', variables('resourceToken')))]"
              ]
            },
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2023-01-31",
              "name": "[format('mi-{0}', variables('resourceToken'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]"
            },
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2023-07-01",
              "name": "[replace(format('acr-{0}', variables('resourceToken')), '-', '')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Basic"
              },
              "tags": "[parameters('tags')]"
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', replace(format('acr-{0}', variables('resourceToken')), '-', ''))]",
              "name": "[guid(resourceId('Microsoft.ContainerRegistry/registries', replace(format('acr-{0}', variables('resourceToken')), '-', '')), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('mi-{0}', variables('resourceToken'))), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7f951dda-4ed3-4680-a7ca-43fe172d538d'))]",
              "properties": {
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('mi-{0}', variables('resourceToken'))), '2023-01-31').principalId]",
                "principalType": "ServicePrincipal",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7f951dda-4ed3-4680-a7ca-43fe172d538d')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', replace(format('acr-{0}', variables('resourceToken')), '-', ''))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('mi-{0}', variables('resourceToken')))]"
              ]
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2022-10-01",
              "name": "[format('law-{0}', variables('resourceToken'))]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                }
              },
              "tags": "[parameters('tags')]"
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2022-05-01",
              "name": "[format('vol{0}', variables('resourceToken'))]",
              "location": "[parameters('location')]",
              "kind": "StorageV2",
              "sku": {
                "name": "Standard_LRS"
              },
              "properties": {
                "largeFileSharesState": "Enabled"
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/fileServices",
              "apiVersion": "2022-05-01",
              "name": "[format('{0}/{1}', format('vol{0}', variables('resourceToken')), 'default')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', format('vol{0}', variables('resourceToken')))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', format('vol{0}', variables('resourceToken')))]",
              "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', format('vol{0}', variables('resourceToken'))), parameters('principalId'), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '69566ab7-960f-475b-8e7c-b3118f30c6bd'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '69566ab7-960f-475b-8e7c-b3118f30c6bd')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', format('vol{0}', variables('resourceToken')))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
              "apiVersion": "2022-05-01",
              "name": "[format('{0}/{1}/{2}', format('vol{0}', variables('resourceToken')), 'default', take(format('{0}-{1}', toLower('cache'), toLower('edumindapphostfc90bfaeb5cachedata')), 60))]",
              "properties": {
                "shareQuota": 1024,
                "enabledProtocols": "SMB"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', format('vol{0}', variables('resourceToken')), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
              "apiVersion": "2022-05-01",
              "name": "[format('{0}/{1}/{2}', format('vol{0}', variables('resourceToken')), 'default', take(format('{0}-{1}', toLower('ollama'), toLower('bm0')), 60))]",
              "properties": {
                "shareQuota": 1024,
                "enabledProtocols": "SMB"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', format('vol{0}', variables('resourceToken')), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
              "apiVersion": "2022-05-01",
              "name": "[format('{0}/{1}/{2}', format('vol{0}', variables('resourceToken')), 'default', take(format('{0}-{1}', toLower('postgres'), toLower('edumindapphostfc90bfaeb5postgresdata')), 60))]",
              "properties": {
                "shareQuota": 1024,
                "enabledProtocols": "SMB"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', format('vol{0}', variables('resourceToken')), 'default')]"
              ]
            },
            {
              "type": "Microsoft.DBforPostgreSQL/flexibleServers",
              "apiVersion": "2023-03-01-preview",
              "name": "[format('psql-{0}', variables('resourceToken'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard_B1ms",
                "tier": "Burstable"
              },
              "properties": {
                "version": "16",
                "administratorLogin": "edumind_admin",
                "administratorLoginPassword": "[parameters('postgres_password')]",
                "storage": {
                  "storageSizeGB": 32,
                  "autoGrow": "Disabled"
                },
                "backup": {
                  "backupRetentionDays": 7,
                  "geoRedundantBackup": "Disabled"
                },
                "highAvailability": {
                  "mode": "Disabled"
                },
                "availabilityZone": ""
              },
              "tags": "[parameters('tags')]"
            },
            {
              "type": "Microsoft.DBforPostgreSQL/flexibleServers/firewallRules",
              "apiVersion": "2023-03-01-preview",
              "name": "[format('{0}/{1}', format('psql-{0}', variables('resourceToken')), 'AllowAllAzureServicesAndResourcesWithinAzureIps')]",
              "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', format('psql-{0}', variables('resourceToken')))]"
              ]
            },
            {
              "type": "Microsoft.DBforPostgreSQL/flexibleServers/databases",
              "apiVersion": "2023-03-01-preview",
              "name": "[format('{0}/{1}', format('psql-{0}', variables('resourceToken')), 'edumind')]",
              "properties": {
                "charset": "UTF8",
                "collation": "en_US.utf8"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', format('psql-{0}', variables('resourceToken')))]"
              ]
            },
            {
              "type": "Microsoft.App/managedEnvironments",
              "apiVersion": "2024-02-02-preview",
              "name": "[format('cae-{0}', variables('resourceToken'))]",
              "location": "[parameters('location')]",
              "properties": {
                "workloadProfiles": [
                  {
                    "workloadProfileType": "Consumption",
                    "name": "consumption"
                  }
                ],
                "appLogsConfiguration": {
                  "destination": "log-analytics",
                  "logAnalyticsConfiguration": {
                    "customerId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', format('law-{0}', variables('resourceToken'))), '2022-10-01').customerId]",
                    "sharedKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', format('law-{0}', variables('resourceToken'))), '2022-10-01').primarySharedKey]"
                  }
                }
              },
              "tags": "[parameters('tags')]",
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', format('law-{0}', variables('resourceToken')))]"
              ]
            },
            {
              "type": "Microsoft.App/managedEnvironments/storages",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', format('cae-{0}', variables('resourceToken')), take(format('{0}-{1}', toLower('cache'), toLower('edumindapphostfc90bfaeb5cachedata')), 32))]",
              "properties": {
                "azureFile": {
                  "shareName": "[take(format('{0}-{1}', toLower('cache'), toLower('edumindapphostfc90bfaeb5cachedata')), 60)]",
                  "accountName": "[format('vol{0}', variables('resourceToken'))]",
                  "accountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', format('vol{0}', variables('resourceToken'))), '2022-05-01').keys[0].value]",
                  "accessMode": "ReadWrite"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices/shares', format('vol{0}', variables('resourceToken')), 'default', take(format('{0}-{1}', toLower('cache'), toLower('edumindapphostfc90bfaeb5cachedata')), 60))]",
                "[resourceId('Microsoft.App/managedEnvironments', format('cae-{0}', variables('resourceToken')))]",
                "[resourceId('Microsoft.Storage/storageAccounts', format('vol{0}', variables('resourceToken')))]"
              ]
            },
            {
              "type": "Microsoft.App/managedEnvironments/storages",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', format('cae-{0}', variables('resourceToken')), take(format('{0}-{1}', toLower('ollama'), toLower('bm0')), 32))]",
              "properties": {
                "azureFile": {
                  "shareName": "[take(format('{0}-{1}', toLower('ollama'), toLower('bm0')), 60)]",
                  "accountName": "[format('vol{0}', variables('resourceToken'))]",
                  "accountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', format('vol{0}', variables('resourceToken'))), '2022-05-01').keys[0].value]",
                  "accessMode": "ReadWrite"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.App/managedEnvironments', format('cae-{0}', variables('resourceToken')))]",
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices/shares', format('vol{0}', variables('resourceToken')), 'default', take(format('{0}-{1}', toLower('ollama'), toLower('bm0')), 60))]",
                "[resourceId('Microsoft.Storage/storageAccounts', format('vol{0}', variables('resourceToken')))]"
              ]
            },
            {
              "type": "Microsoft.App/managedEnvironments/storages",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', format('cae-{0}', variables('resourceToken')), take(format('{0}-{1}', toLower('postgres'), toLower('edumindapphostfc90bfaeb5postgresdata')), 32))]",
              "properties": {
                "azureFile": {
                  "shareName": "[take(format('{0}-{1}', toLower('postgres'), toLower('edumindapphostfc90bfaeb5postgresdata')), 60)]",
                  "accountName": "[format('vol{0}', variables('resourceToken'))]",
                  "accountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', format('vol{0}', variables('resourceToken'))), '2022-05-01').keys[0].value]",
                  "accessMode": "ReadWrite"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.App/managedEnvironments', format('cae-{0}', variables('resourceToken')))]",
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices/shares', format('vol{0}', variables('resourceToken')), 'default', take(format('{0}-{1}', toLower('postgres'), toLower('edumindapphostfc90bfaeb5postgresdata')), 60))]",
                "[resourceId('Microsoft.Storage/storageAccounts', format('vol{0}', variables('resourceToken')))]"
              ]
            }
          ],
          "outputs": {
            "MANAGED_IDENTITY_CLIENT_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('mi-{0}', variables('resourceToken'))), '2023-01-31').clientId]"
            },
            "MANAGED_IDENTITY_NAME": {
              "type": "string",
              "value": "[format('mi-{0}', variables('resourceToken'))]"
            },
            "MANAGED_IDENTITY_PRINCIPAL_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('mi-{0}', variables('resourceToken'))), '2023-01-31').principalId]"
            },
            "AZURE_LOG_ANALYTICS_WORKSPACE_NAME": {
              "type": "string",
              "value": "[format('law-{0}', variables('resourceToken'))]"
            },
            "AZURE_LOG_ANALYTICS_WORKSPACE_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', format('law-{0}', variables('resourceToken')))]"
            },
            "AZURE_CONTAINER_REGISTRY_ENDPOINT": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', replace(format('acr-{0}', variables('resourceToken')), '-', '')), '2023-07-01').loginServer]"
            },
            "AZURE_CONTAINER_REGISTRY_MANAGED_IDENTITY_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('mi-{0}', variables('resourceToken')))]"
            },
            "AZURE_CONTAINER_REGISTRY_NAME": {
              "type": "string",
              "value": "[replace(format('acr-{0}', variables('resourceToken')), '-', '')]"
            },
            "AZURE_CONTAINER_APPS_ENVIRONMENT_NAME": {
              "type": "string",
              "value": "[format('cae-{0}', variables('resourceToken'))]"
            },
            "AZURE_CONTAINER_APPS_ENVIRONMENT_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.App/managedEnvironments', format('cae-{0}', variables('resourceToken')))]"
            },
            "AZURE_CONTAINER_APPS_ENVIRONMENT_DEFAULT_DOMAIN": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.App/managedEnvironments', format('cae-{0}', variables('resourceToken'))), '2024-02-02-preview').defaultDomain]"
            },
            "SERVICE_CACHE_VOLUME_EDUMINDAPPHOSTFC90BFAEB5CACHEDATA_NAME": {
              "type": "string",
              "value": "[take(format('{0}-{1}', toLower('cache'), toLower('edumindapphostfc90bfaeb5cachedata')), 32)]"
            },
            "SERVICE_OLLAMA_VOLUME_BM0_NAME": {
              "type": "string",
              "value": "[take(format('{0}-{1}', toLower('ollama'), toLower('bm0')), 32)]"
            },
            "SERVICE_OLLAMA_FILE_SHARE_BM0_NAME": {
              "type": "string",
              "value": "[take(format('{0}-{1}', toLower('ollama'), toLower('bm0')), 60)]"
            },
            "SERVICE_POSTGRES_VOLUME_EDUMINDAPPHOSTFC90BFAEB5POSTGRESDATA_NAME": {
              "type": "string",
              "value": "[take(format('{0}-{1}', toLower('postgres'), toLower('edumindapphostfc90bfaeb5postgresdata')), 32)]"
            },
            "AZURE_VOLUMES_STORAGE_ACCOUNT": {
              "type": "string",
              "value": "[format('vol{0}', variables('resourceToken'))]"
            },
            "POSTGRES_HOST": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.DBforPostgreSQL/flexibleServers', format('psql-{0}', variables('resourceToken'))), '2023-03-01-preview').fullyQualifiedDomainName]"
            },
            "POSTGRES_DATABASE": {
              "type": "string",
              "value": "edumind"
            },
            "POSTGRES_USERNAME": {
              "type": "string",
              "value": "edumind_admin"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}', parameters('environmentName')))]"
      ]
    }
  ],
  "outputs": {
    "MANAGED_IDENTITY_CLIENT_ID": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2025-04-01').outputs.MANAGED_IDENTITY_CLIENT_ID.value]"
    },
    "MANAGED_IDENTITY_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2025-04-01').outputs.MANAGED_IDENTITY_NAME.value]"
    },
    "AZURE_LOG_ANALYTICS_WORKSPACE_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2025-04-01').outputs.AZURE_LOG_ANALYTICS_WORKSPACE_NAME.value]"
    },
    "AZURE_CONTAINER_REGISTRY_ENDPOINT": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2025-04-01').outputs.AZURE_CONTAINER_REGISTRY_ENDPOINT.value]"
    },
    "AZURE_CONTAINER_REGISTRY_MANAGED_IDENTITY_ID": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2025-04-01').outputs.AZURE_CONTAINER_REGISTRY_MANAGED_IDENTITY_ID.value]"
    },
    "AZURE_CONTAINER_REGISTRY_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2025-04-01').outputs.AZURE_CONTAINER_REGISTRY_NAME.value]"
    },
    "AZURE_CONTAINER_APPS_ENVIRONMENT_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2025-04-01').outputs.AZURE_CONTAINER_APPS_ENVIRONMENT_NAME.value]"
    },
    "AZURE_CONTAINER_APPS_ENVIRONMENT_ID": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2025-04-01').outputs.AZURE_CONTAINER_APPS_ENVIRONMENT_ID.value]"
    },
    "AZURE_CONTAINER_APPS_ENVIRONMENT_DEFAULT_DOMAIN": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2025-04-01').outputs.AZURE_CONTAINER_APPS_ENVIRONMENT_DEFAULT_DOMAIN.value]"
    },
    "SERVICE_CACHE_VOLUME_EDUMINDAPPHOSTFC90BFAEB5CACHEDATA_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2025-04-01').outputs.SERVICE_CACHE_VOLUME_EDUMINDAPPHOSTFC90BFAEB5CACHEDATA_NAME.value]"
    },
    "SERVICE_OLLAMA_VOLUME_BM0_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2025-04-01').outputs.SERVICE_OLLAMA_VOLUME_BM0_NAME.value]"
    },
    "SERVICE_OLLAMA_FILE_SHARE_BM0_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2025-04-01').outputs.SERVICE_OLLAMA_FILE_SHARE_BM0_NAME.value]"
    },
    "SERVICE_POSTGRES_VOLUME_EDUMINDAPPHOSTFC90BFAEB5POSTGRESDATA_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2025-04-01').outputs.SERVICE_POSTGRES_VOLUME_EDUMINDAPPHOSTFC90BFAEB5POSTGRESDATA_NAME.value]"
    },
    "AZURE_VOLUMES_STORAGE_ACCOUNT": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2025-04-01').outputs.AZURE_VOLUMES_STORAGE_ACCOUNT.value]"
    },
    "POSTGRES_HOST": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2025-04-01').outputs.POSTGRES_HOST.value]"
    },
    "POSTGRES_DATABASE": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2025-04-01').outputs.POSTGRES_DATABASE.value]"
    },
    "POSTGRES_USERNAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2025-04-01').outputs.POSTGRES_USERNAME.value]"
    }
  }
}