version: '3.8'

# Docker Compose configuration for CI/CD integration tests
# Optimized for speed and minimal resource usage

services:
  postgres-test:
    image: postgres:16-alpine
    container_name: edumind-postgres-test
    environment:
      POSTGRES_DB: edumind_test
      POSTGRES_USER: edumind_test_user
      POSTGRES_PASSWORD: edumind_test_password
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U edumind_test_user -d edumind_test"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s
    tmpfs:
      - /var/lib/postgresql/data  # Use tmpfs for faster I/O in CI
    command: >
      postgres
      -c shared_buffers=128MB
      -c max_connections=50
      -c work_mem=16MB
      -c maintenance_work_mem=64MB
      -c effective_cache_size=256MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=4MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c fsync=off
      -c synchronous_commit=off
      -c full_page_writes=off

  redis-test:
    image: redis:7-alpine
    container_name: edumind-redis-test
    command: >
      redis-server
      --appendonly no
      --save ""
      --maxmemory 128mb
      --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s
    tmpfs:
      - /data  # Use tmpfs for faster I/O in CI

networks:
  default:
    name: edumind-test-network
