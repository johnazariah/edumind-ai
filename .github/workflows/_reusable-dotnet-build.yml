name: Reusable .NET Build and Test

on:
    workflow_call:
        inputs:
            dotnet-version:
                description: ".NET SDK version to use"
                required: false
                type: string
                default: "9.0.x"
            configuration:
                description: "Build configuration (Debug or Release)"
                required: false
                type: string
                default: "Release"
            run-unit-tests:
                description: "Whether to run unit tests"
                required: false
                type: boolean
                default: true
            run-performance-tests:
                description: "Whether to run performance tests"
                required: false
                type: boolean
                default: false
            enable-code-coverage:
                description: "Whether to collect code coverage"
                required: false
                type: boolean
                default: false
            aspire-workload:
                description: "Whether to install Aspire workload"
                required: false
                type: boolean
                default: true
        outputs:
            build-version:
                description: "The semantic version of the build"
                value: ${{ jobs.build.outputs.version }}

env:
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
    DOTNET_CLI_TELEMETRY_OPTOUT: true
    DOTNET_ROOT: /usr/share/dotnet

jobs:
    build:
        runs-on: ubuntu-latest
        outputs:
            version: ${{ steps.version.outputs.version }}

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0 # Full history for GitVersion

            - name: Setup .NET
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: ${{ inputs.dotnet-version }}

            - name: Install .NET Aspire workload
              if: inputs.aspire-workload
              run: dotnet workload install aspire

            - name: Determine version
              id: version
              run: |
                  # Simple version based on git describe
                  VERSION=$(git describe --tags --always --dirty 2>/dev/null || echo "0.1.0-dev")
                  echo "version=$VERSION" >> $GITHUB_OUTPUT
                  echo "ðŸ“¦ Build version: $VERSION"

            - name: Restore dependencies
              run: dotnet restore EduMind.AI.sln

            - name: Build solution
              run: |
                  dotnet build EduMind.AI.sln \
                    --configuration ${{ inputs.configuration }} \
                    --no-restore \
                    -p:Version=${{ steps.version.outputs.version }}

            - name: Run unit tests
              if: inputs.run-unit-tests
              run: |
                  dotnet test tests/AcademicAssessment.Tests.Unit \
                    --configuration ${{ inputs.configuration }} \
                    --no-build \
                    --verbosity normal \
                    ${{ inputs.enable-code-coverage && '--collect:"XPlat Code Coverage" --results-directory ./coverage' || '' }} \
                    --logger "trx;LogFileName=unit-test-results.trx"

            - name: Run performance tests
              if: inputs.run-performance-tests
              run: |
                  dotnet test tests/AcademicAssessment.Tests.Performance \
                    --configuration ${{ inputs.configuration }} \
                    --no-build \
                    --verbosity normal \
                    --logger "trx;LogFileName=perf-test-results.trx"

            - name: Upload test results
              if: always() && (inputs.run-unit-tests || inputs.run-performance-tests)
              uses: actions/upload-artifact@v4
              with:
                  name: test-results-${{ inputs.configuration }}
                  path: |
                      **/*.trx
                      coverage/**/*
                  retention-days: 30

            - name: Upload coverage to Codecov
              if: inputs.enable-code-coverage && inputs.run-unit-tests
              uses: codecov/codecov-action@v4
              with:
                  directory: ./coverage
                  fail_ci_if_error: false
                  verbose: true
