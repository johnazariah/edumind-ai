name: Deploy to Azure (Aspire with azd)

on:
    push:
        branches: [main]
    workflow_dispatch:
        inputs:
            environment:
                description: "Environment to deploy to"
                required: true
                default: "dev"
                type: choice
                options:
                    - dev
                    - staging
                    - prod

env:
    DOTNET_VERSION: "9.0.x"
    AZURE_ENV_NAME: ${{ github.event.inputs.environment || 'dev' }}

jobs:
    build-and-test:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup .NET
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: ${{ env.DOTNET_VERSION }}

            - name: Install .NET Aspire workload
              run: dotnet workload install aspire

            - name: Restore dependencies
              run: dotnet restore EduMind.AI.sln

            - name: Build solution
              run: dotnet build EduMind.AI.sln --configuration Release --no-restore

            - name: Run unit tests
              run: dotnet test tests/AcademicAssessment.Tests.Unit --configuration Release --no-build --verbosity normal

    deploy:
        runs-on: ubuntu-latest
        needs: build-and-test
        environment:
            name: ${{ github.event.inputs.environment || 'dev' }}
        permissions:
            id-token: write
            contents: read

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup .NET
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: ${{ env.DOTNET_VERSION }}

            - name: Install .NET Aspire workload
              run: dotnet workload install aspire

            - name: Install Azure Developer CLI
              uses: Azure/setup-azd@v1.0.0

            - name: Azure Login
              uses: azure/login@v2
              with:
                  client-id: ${{ secrets.AZURE_CLIENT_ID }}
                  tenant-id: ${{ secrets.AZURE_TENANT_ID }}
                  subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

            - name: Configure azd environment
              run: |
                  azd env new ${{ env.AZURE_ENV_NAME }} --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }} --location eastus
                  azd env set AZURE_SUBSCRIPTION_ID ${{ secrets.AZURE_SUBSCRIPTION_ID }}

            - name: Deploy with Azure Developer CLI
              run: azd up --no-prompt
              env:
                  AZURE_ENV_NAME: ${{ env.AZURE_ENV_NAME }}
                  AZURE_LOCATION: eastus
                  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

            - name: Get deployment outputs
              id: outputs
              run: |
                  WEB_API_URL=$(azd env get-values | grep WEBAPP_URL | cut -d'=' -f2)
                  echo "web-api-url=$WEB_API_URL" >> $GITHUB_OUTPUT

            - name: Health check
              run: |
                  echo "Waiting for services to start..."
                  sleep 30
                  HEALTH_URL="${{ steps.outputs.outputs.web-api-url }}/health"
                  echo "Checking health endpoint: $HEALTH_URL"
                  curl -f $HEALTH_URL || exit 1
                  echo "âœ… Health check passed"

            - name: Azure logout
              if: always()
              run: |
                  azd env list
                  az logout

    integration-tests:
        runs-on: ubuntu-latest
        needs: deploy
        if: github.event.inputs.environment != 'prod'

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup .NET
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: ${{ env.DOTNET_VERSION }}

            - name: Install .NET Aspire workload
              run: dotnet workload install aspire

            - name: Azure Login
              uses: azure/login@v2
              with:
                  client-id: ${{ secrets.AZURE_CLIENT_ID }}
                  tenant-id: ${{ secrets.AZURE_TENANT_ID }}
                  subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

            - name: Get API URL from azd
              id: get-url
              run: |
                  azd env refresh -e ${{ env.AZURE_ENV_NAME }}
                  API_URL=$(azd env get-values | grep WEBAPP_URL | cut -d'=' -f2)
                  echo "api-url=$API_URL" >> $GITHUB_OUTPUT

            - name: Run integration tests against deployed environment
              env:
                  API_BASE_URL: ${{ steps.get-url.outputs.api-url }}
                  ASPNETCORE_ENVIRONMENT: Testing
              run: |
                  dotnet test tests/AcademicAssessment.Tests.Integration \
                    --configuration Release \
                    --logger "trx;LogFileName=integration-test-results.trx" \
                    --verbosity normal

            - name: Upload test results
              if: always()
              uses: actions/upload-artifact@v4
              with:
                  name: integration-test-results
                  path: "**/integration-test-results.trx"
                  retention-days: 30
